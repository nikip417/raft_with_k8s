# This configuration is based on https://github.com/petabridge/Cluster.WebCrawler/blob/dev/src/Lighthouse/akka.hocon

# See petabridge.cmd configuration options here: https://cmd.petabridge.com/articles/install/host-configuration.html
#petabridge.cmd{
#	# default IP address used to listen for incoming petabridge.cmd client connections
#	# should be a safe default as it listens on "all network interfaces".
#	host = "0.0.0.0"
#
#	# default port number used to listen for incoming petabridge.cmd client connections
#	port = 9110
#}

akka {
  coordinated-shutdown.exit-clr = on
  actor {
    provider = cluster
  }
  
  remote {
    log-remote-lifecycle-events = DEBUG
    dot-netty.tcp {
      transport-class = "Akka.Remote.Transport.DotNetty.TcpTransport, Akka.Remote"
      applied-adapters = []
      transport-protocol = tcp
      #will be populated with a dynamic host-name at runtime if left uncommented
      # ^^ The Akka.NET docs claim this, but what actually happens it it gets replaced by 0.0.0.0
      public-hostname = "BADHOST"
      hostname = "0.0.0.0"
      port = 4053
    }
  }            

  cluster {
    #will inject this node as a self-seed node at run-time
    # Kubernetes service
    seed-nodes = ["akka.tcp://demo@actordemo-0.actordemo.default.svc.cluster.local:4053"]
    # seed-nodes = ["akka.tcp://demo@actordemo-0.actordemo.default.svc.cluster.local:4053", "akka.tcp://demo@actordemo-1.actordemo.default.svc.cluster.local:4053"]
    # Docker private network
    #seed-nodes = ["akka.tcp://demo@actordemo-0:4053", "akka.tcp://demo@actordemo-1:4053"] 
  }
}
